name: Build Share Win

# 手动触发
on:
  workflow_dispatch:

jobs:
  build_windows:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v5

      # 2. 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '16'  # electron@3.x 需要 Node 16

      # 3. 缓存 node_modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. 安装依赖（不触发 postinstall）
      - name: Install dependencies
        run: npm install --ignore-scripts

      # 5. 安装 electron-builder
      - name: Install electron-builder
        run: npm install -g electron-builder

      # 6. 安装 Wine 以支持跨平台打包 Windows 程序
      - name: Install Wine (32/64)
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine64 wine32

      # 7. 执行 package.json 中定义的 dist 构建
      #    例如 "dist": "electron-builder --win portable"
      - name: Build app
        run: npm run dist

      # 8. 上传构建产物（整个 dist 文件夹）
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Share-Windows
          path: dist/
